{"version":3,"sources":["Components/Input.js","Components/Form.js","Components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","react_default","a","createElement","className","id","name","type","value","onChange","handleChange","placeholder","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textareaValue","email","textarea","bind","assertThisInitialized","handleSubmit","event","key","target","setState","defineProperty","preventDefault","data","phone","address","fetch","method","headers","Accept","Content-Type","mode","body","JSON","stringify","then","response","json","console","log","catch","error","onSubmit","Components_Input","title","rows","React","Component","Cards","projects","description","img","url","hover","tools","Frontend","Backend","Database","project","src","alt","toolsdivs","keys","map","unshift","scrollAnimation_min_default","animateIn","href","App","xmlns","viewBox","preserveAspectRatio","fill","points","Components_Cards","Components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72034bfd.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Input = (props) => {\n    return (  \n  <div className=\"form-group\">\n    \n    <input\n      className=\"form-input\"\n      id={props.name}\n      name={props.name}\n      type={props.type}\n      value={props.value}\n      onChange={props.handleChange}\n      placeholder={props.placeholder} \n    />\n  </div>\n)\n}\n\nexport default Input;\n","import React from \"react\";\nimport Input from \"./Input\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      textareaValue: \"\",\n      name: \"\",\n      email: \"\",\n      textarea: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const key = event.target.name;\n    this.setState({ [key]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    // alert('A name was submitted: ' + this.state.name + this.state.email + this.state.textarea);\n    event.preventDefault();\n    let data = {\n      name: this.state.name,\n      phone: this.state.email,\n      address: this.state.textarea,\n    };\n    fetch(\"/submitform\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      mode: \"cors\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  }\n\n  render() {\n    return (\n      <div className=\"divForm\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>CONTACT</h2>\n          <div className=\"line\" />\n          <Input\n            type={\"text\"}\n            title={\"Name\"}\n            name={\"name\"}\n            value={this.state.name}\n            placeholder={\"Name\"}\n            handleChange={this.handleChange}\n          />\n          <Input\n            type={\"email\"}\n            title={\"email\"}\n            name={\"email\"}\n            value={this.state.email}\n            placeholder={\"Email\"}\n            handleChange={this.handleChange}\n          />\n          <textarea\n            title=\"textarea\"\n            name=\"textarea\"\n            value={this.state.textarea}\n            placeholder=\"  Message\"\n            onChange={this.handleChange}\n            rows=\"6\"\n          >\n            {\" \"}\n          </textarea>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\n\nclass Cards extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      projects: [\n        {\n          id: \"1\",\n          title: \"Mums Organiser\",\n          description: \"A website designed for young mums\",\n          img: \"mac_mumsorg\",\n          url: \"https://mumsorganizer.firebaseapp.com/\",\n          hover: false,\n          tools: {\n            Frontend: \"vue.js\",\n            Backend: \"node.js\",\n            Database: \"firebase\",\n          },\n        },\n        {\n          id: \"2\",\n          title: \"Another Project in development\",\n          description: \"in development\",\n          hover: false,\n          img: \"mac_empty\",\n          tools: {\n            Frontend: \"not selected yet\",\n            Backend: \"not selected yet\",\n            Database: \"not selected yet\",\n          },\n        },\n\n        {\n          id: \"3\",\n          title: \"Another Project in development\",\n          description: \"in development\",\n          hover: false,\n          img: \"mac_empty\",\n          tools: {\n            Frontend: \"not selected yet\",\n            Backend: \"not selected yet\",\n            Database: \"not selected yet\",\n          },\n        },\n      ],\n    };\n  }\n\n  content(project) {\n    if (!project.hover) {\n      return (\n        <div>\n          <img\n            src={\"/\" + project.img + \".jpg\"}\n            id={project.id}\n            alt={project.img}\n          />\n          <h5>{project.title}</h5>\n          <p>{project.description}</p>\n        </div>\n      );\n    } else if (project.hover) {\n      const toolsdivs = Object.keys(project.tools).map((key) => {\n        return (\n          <div className=\"hoveredCardDiv\">\n            <p>{key}</p> {project.tools[key]}{\" \"}\n          </div>\n        );\n      });\n      toolsdivs.unshift(<h3>TECHNOLOGIES USED</h3>);\n      return toolsdivs;\n    }\n  }\n\n  render() {\n    return this.state.projects.map((project) => {\n      return (\n        <ScrollAnimation animateIn=\"fadeInUp\">\n          <div id={project.id} key={project.id} className=\"project\">\n            <div>\n              <img\n                src={\"/\" + project.img + \".jpg\"}\n                id={project.id}\n                alt={project.img}\n              />\n            </div>\n            <div className=\"description\">\n              <h3>{project.title}</h3>\n              <p>\n                {project.description} <br />\n                Technologies: <br />\n                Frontend - {project.tools.Frontend} Backend -{\" \"}\n                {project.tools.Backend} Database - {project.tools.Database}\n              </p>\n              <span className=\"button\">\n                <a href={project.url}>visit website&#62;&#62;</a>\n              </span>\n            </div>\n            <div />\n          </div>\n        </ScrollAnimation>\n      );\n    });\n  }\n}\n\nexport default Cards;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Form from \"./Components/Form\";\nimport Cards from \"./Components/Cards\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <div id=\"mycontainer\" className=\"mycontainer\">\n          <div className=\"row\">\n            <h1>\n              Hello, my name is\n              <span className=\"textWhite\"> Olga Kokhanova</span>. <br />\n              I'm a web and mobile developer <br />\n              based in St.Petersburg, Russia.\n            </h1>\n          </div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"none\"\n          >\n            <polygon fill=\"white\" points=\"0,100 100,0 100,100\" />\n          </svg>\n          <div className=\"btn\">\n            <a href=\"#container2\">View my work</a>\n          </div>\n        </div>\n        <div className=\"mycontainer\" id=\"container2\">\n          <div className=\"row\">\n            <h2>Portfolio</h2>\n            <div className=\"line black\" />\n\n            <Cards />\n          </div>\n        </div>\n        <div className=\"mycontainer\" id=\"container3\">\n          <Form />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}